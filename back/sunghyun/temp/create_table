from sqlalchemy import Column, String, Date, Boolean, ForeignKey, create_engine
from sqlalchemy.orm import declarative_base, relationship
from datetime import datetime

# ✅ DB 연결 설정 (MySQL, DB 이름: capston)
DATABASE_URL = (
    "mysql+pymysql://admin:admin1234@"
    "az-a.database-lsh.ae90ddc1b6dc4b0581bb44b31f8921b5."
    "mysql.managed-service.kr-central-2.kakaocloud.com:3306/capston"
)
engine = create_engine(DATABASE_URL)
Base = declarative_base()

# 1. 거래량 상위 10개 주식을 보여주는 테이블
class TopStock(Base):
    __tablename__ = "top_stock"
    
    company_name = Column(String(255), primary_key=True)   # 기업명 (PK)
    price = Column(String(20), nullable=False)             # 현재가
    volume = Column(String(50), nullable=False)            # 거래량
    ticker = Column(String(20), nullable=False)            # 티커
    date = Column(Date, nullable=False)                    # 크롤링한 날짜
    
    # favorite와의 관계 (참조 값으로 company_name이 사용됨)
    favorites = relationship("Favorite", back_populates="top_stock", cascade="all, delete-orphan")


# 2. 사용자 테이블
class User(Base):
    __tablename__ = "user"
    
    user_name = Column(String(50), primary_key=True)         # 사용자 이름 (PK)
    user_passworkd = Column(String(255), nullable=False)      # 비밀번호
    user_email = Column(String(100), unique=True, nullable=False)  # 이메일
    
    # favorite와의 관계 (참조 값으로 user_name이 사용됨)
    favorites = relationship("Favorite", back_populates="user", cascade="all, delete-orphan")


# 3. 사용자가 즐겨찾기한 테이블
class Favorite(Base):
    __tablename__ = "favorite"
    
    user_name = Column(String(50), ForeignKey("user.user_name"), primary_key=True)
    company_name = Column(String(255), ForeignKey("top_stock.company_name"), primary_key=True)
    subscriptoin = Column(Boolean, default=False)   # 즐겨찾기 여부 (기본 false)
    notification = Column(Boolean, default=False)    # 알림 설정 (기본 false)
    
    # 관계 설정
    user = relationship("User", back_populates="favorites")
    top_stock = relationship("TopStock", back_populates="favorites")


# ✅ 테이블 생성 실행
Base.metadata.create_all(bind=engine)
print("✅ capston 데이터베이스에 모든 테이블이 성공적으로 생성되었습니다.")
